name: Build Club Service

on:
  push:
    paths:
      - "club-service/**"
    branches: [ "main" ]
  pull_request:
    paths:
      - "club-service/**"
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build-club-service-api:
    name: Build Club Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./club-service

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: club-db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/club-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Make Maven Wrapper executable
        run: chmod +x ./mvnw


      - name: Build with Maven
        run: ./mvnw -ntp verify

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build and Publish Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=${{ secrets.DOCKER_USERNAME }}/club-service
          docker push ${{ secrets.DOCKER_USERNAME }}/club-service
